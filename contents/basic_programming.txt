---
title: "Basics of Programming"
author: foobar
tags: [programming]
copyright: CC BY-NC
---
Programming is an activity of designing Software Applications and Interactive Media.

A Software Application is a Control System with Digital Interfaces suited for the particular Domain.

Flows and User Interfaces around Data are the main Ingredients of Software.

Components constitute backend.
User Interfaces constitute the frontend.

Both require distinct mindsets.

Data
====
- ER / Binary / XML / Object
- Queries
- Serialization
- Storage and Caching
- Indexing / Searching / Tagging
- Compression
- Ontology
- Analytics
- Objects
- Triggers
- Validation
- Transforms
- Commands
- Queries
- Extractors
- Loaders

Components
==========

A Component has
1. A life cycle
2. A way to get inputs and interrupts
2. An execution body
3. A way to delegate outputs
4. State

Execution body is made of
- System Calls and Instructions
- Decisions and Loops
- Arithmetic
- Functions

Function is a passive Component.
Co-Routine / CPS / Active Objects / Processes are Active Components.

A set of Related Components is a Module.

Component Types
===============

Reactive
Stream
Simple
Controller
Scheduler
Router
Main

Filters
- Authentication
- Authorization
- Validation

User Interfaces
===============
- Forms
- Widgets
- Layouts
- Scene Graph
- Roles and Actions

Flows
=====

Data flows across a coupling.

Module Coupling
- Reflection

Component Coupling
- Function Calls
- Function Pointer / Callbacks / Promises / Continuations
- Interceptors

User Interface Coupling
- Pub / Sub / Subject / Observers / Messaging / Eventing

Remote
- RPC
- FBP
- Half Objects

Mix
- Request / Response
- Tokens
- Message Queues

Programming
===========

0. Gather User Stories
1. Code the User Interfaces concretely or abstractly
2. Design Data
3. Couple User Interfaces to Components
4. Couple Components
5. Simulate / Demo
6. Repeat

Characteristics of Software
===========================
- Size
- Speed
- Bandwidth
- Memory

Deployment
==========
- Build
- Horizontal and Vertical Scaling

Testing Software
=================
- End User Simulation
- Stress Testing
- Edge Case Testing
- Component Testing

Naming Conventions
==================
Data / Events Should follow structural Naming Conventions.
Operations are AdjectiveNouns
Callbacks are VerbNouns

Files should be organized by
- Models
- Components
- Passive Components
- Main Component
- User Interfaces
- Couplings
- Simulations

